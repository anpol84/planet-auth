/**
 * NOTE: This class is auto generated by Kora OpenAPI Generator (https://openapi-generator.tech) (7.4.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package ru.planet.auth.api;

import ru.planet.auth.model.AuthErrorResponse;
import ru.planet.auth.model.AuthRequest;
import ru.planet.auth.model.AuthResponse;
import ru.planet.auth.model.Login400Response;

import java.util.List;
import java.util.Map;
import jakarta.annotation.Nullable;


@ru.tinkoff.kora.common.annotation.Generated("openapi generator kora server")
@ru.tinkoff.kora.http.server.common.annotation.HttpController
@ru.tinkoff.kora.common.Component
public class AuthApiController {
    private final AuthApiDelegate delegate;

    public AuthApiController(AuthApiDelegate delegate) {
      this.delegate = delegate;
    }

    /**
     * GET /api/auth : Get a jwt token
     *
     * @param authRequest  (required)
     * @return Jwt token (status code 200)
     *         or Ошибка валидации запроса (status code 400)
     *         or Ошибка в бизнес логике (status code 422)
     */
    @ru.tinkoff.kora.http.common.annotation.HttpRoute(method = "GET", path = "/api/auth")
    @ru.tinkoff.kora.common.Mapping(AuthApiServerResponseMappers.LoginApiResponseMapper.class)
    public AuthApiResponses.LoginApiResponse login(      
      @ru.tinkoff.kora.json.common.annotation.Json
      AuthRequest authRequest
    ) throws Exception {
      return this.delegate.login(
        authRequest
      );
    }

}
